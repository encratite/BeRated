@using BeRated
@using BeRated.Model

@model PlayerStatsModel

@{
    Layout = "/Layout";
    ViewBag.Title = Model.Name;
}

@functions {
	string Round(decimal? number)
	{
		if (number.HasValue)
			return number.Value.ToString("0.00");
		else
			return string.Empty;
	}
}

<table class="sortable numericTable">
	<tr>
		<th class="string">Weapon</th>
		<th>Kills</th>
		<th>Headshots</th>
		<th>Headshot percentage</th>
	</tr>
	@foreach (var weapon in Model.Weapons) {
		<tr>
			<td>@weapon.Weapon</td>
			<td>@weapon.Kills</td>
			<td>@weapon.Headshots</td>
			<td>@RatingApp.GetPercentage(weapon.HeadshotRatio)</td>
		</tr>
	}
</table>

<table class="sortable numericTable">
	<tr>
		<th class="string">Item</th>
		<th>Times purchased</th>
		<th>Purchases per round</th>
		<th>Kills per purchase</th>
	</tr>
	@foreach (var item in Model.Purchases) {
		<tr>
			<td>@item.Item</td>
			<td>@item.TimesPurchased</td>
			<td>@Round(item.PurchasesPerRound)</td>
			<td>@Round(item.KillsPerPurchase)</td>
		</tr>
	}
</table>

<table class="sortable numericTable">
	<tr>
		<th class="string">Opponent</th>
		<th>Encounters</th>
		<th>Kills</th>
		<th>Deaths</th>
		<th>Win ratio</th>
	</tr>
	@foreach (var player in Model.Encounters) {
		<tr>
			<td><a href="@RatingApp.GetPlayerPath(player.OpponentId, Model.Days)">@player.OpponentName</a></td>
			<td>@player.Encounters</td>
			<td>@player.Kills</td>
			<td>@player.Deaths</td>
			<td>@RatingApp.GetPercentage(player.WinRatio)</td>
		</tr>
	}
</table>